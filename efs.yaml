Resources:

  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: "aws-gm-test"
      
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.110.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
       - Key: stack
         Value: production

  myInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: stack
        Value: production

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
         Ref: myVPC
      InternetGatewayId:
         Ref: myInternetGateway

  myRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: myVPC
      Tags:
      - Key: stack
        Value: production

  myRoute:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId:
         Ref: myRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId:
         Ref: myInternetGateway

  myPrivateSubnet1a:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.110.3.0/24
      AvailabilityZone: "ca-central-1a"
      MapPublicIpOnLaunch: false
      Tags:
      - Key: stack
        Value: production

  NewKeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: gmCFNlabkeypair

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow http to client host"
      VpcId: !Ref myVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 8
          ToPort: 65500
          CidrIp: 0.0.0.0/0

  EFSSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
        GroupDescription: "security group for the prod EFS"
        GroupName: "test-EFS-SG"
        VpcId: !Ref myVPC
        SecurityGroupIngress:
          - SourceSecurityGroupId: sg-ID
            Description: "servers to connect to efs"
            FromPort: 2049
            IpProtocol: "tcp"
            ToPort: 2049

  EFSFileSystem:
    Type: 'AWS::EFS::FileSystem'
    Properties:
      AvailabilityZoneName: "ca-central-1a"
      BackupPolicy:
        Status: ENABLED
      Encrypted: true
      LifecyclePolicies:
        - TransitionToIA: AFTER_30_DAYS
        - TransitionToPrimaryStorageClass: AFTER_1_ACCESS
      FileSystemPolicy:
        Version: "2012-10-17"
        Principal: "*"
        Statement:
          - Effect: "Allow"
            Action:
              - "elasticfilesystem:ClientMount"

  MountTarget:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId:
       Ref: EFSFileSystem
      SubnetId:
       Ref: myPrivateSubnet1a
      SecurityGroups:
       - Ref: EFSSecurityGroup

  MyInstanceEFS:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0843f7c45354d48b5
      InstanceType: t2.micro
      KeyName: !Ref NewKeyPair
      SubnetId:
        Ref: myPrivateSubnet1a
      SecurityGroupIds:
        - Ref: InstanceSecurityGroup
